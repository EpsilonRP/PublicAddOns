<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\..\FrameXML\UI.xsd">

  <!-- Template for the sound buttons in the sound selector. -->
  <Button name="Epsilon_MerchantSoundPickerButtonTemplate" virtual="true">
		<Size x="230" y="16"/>
		<Frames>
			<Button parentKey="playButton">
				<Size x="18" y="18"/>
				<Anchors>
					<Anchor point="LEFT" x="5" y="0"/>
				</Anchors>
				<NormalTexture file="Interface/Buttons/UI-SpellbookIcon-NextPage-Up"/>
				<PushedTexture file="Interface/Buttons/UI-SpellbookIcon-NextPage-Down"/>
				<DisabledTexture file="Interface/Buttons/UI-SpellbookIcon-NextPage-Disabled"/>
				<HighlightTexture file="Interface/Buttons/UI-Common-MouseHilight" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						Epsilon_MerchantSoundPicker_TestSound( self:GetParent() )
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner( self, "ANCHOR_RIGHT" )
						GameTooltip:AddLine( "Play Sound", 1, 0.81, 0, true )
						GameTooltip:AddLine( "Play this sound.", 1, 1, 1, true )
						GameTooltip:AddLine( "&lt;Left Click to Play>", 0.7, 0.7, 0.7, true )
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Button>
			<Button parentKey="stopButton" hidden="true">
				<Size x="18" y="18"/>
				<Anchors>
					<Anchor point="LEFT" x="5" y="0"/>
				</Anchors>
				<NormalTexture file="Interface/TIMEMANAGER/PauseButton"/>
				<HighlightTexture file="Interface/Buttons/UI-Common-MouseHilight" alphaMode="ADD"/>
				<Scripts>
					<OnClick>
						Epsilon_MerchantSoundPicker_StopSound();
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner( self, "ANCHOR_RIGHT" )
						GameTooltip:AddLine( "Stop Sound", 1, 0.81, 0, true )
						GameTooltip:AddLine( "Stop playing this sound.", 1, 1, 1, true )
						GameTooltip:AddLine( "&lt;Left Click to Stop>", 0.7, 0.7, 0.7, true )
						GameTooltip:Show()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</Button>
		</Frames>
		<Layers>
			<Layer level="BORDER">
				<FontString name="$parentName" parentKey="Name" inherits="GameFontHighlightSmall" justifyH="LEFT">
					<Size x="190" y="14"/>
					<Anchors>
						<Anchor point="LEFT" relativeKey="$parent.playButton" relativePoint="RIGHT" x="1" y="0"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp");
			</OnLoad>
			<OnClick>
				Epsilon_MerchantSoundPickerButton_OnClick(self, button);
			</OnClick>
		</Scripts>
		<HighlightTexture name="$parentHighlight" parentKey="Highlight" file="Interface\QuestFrame\UI-QuestTitleHighlight" alphaMode="ADD">
			<Size x="210" y="16"/>
			<Anchors>
				<Anchor point="TOPLEFT" x="5" y="-2"/>
			</Anchors>
		</HighlightTexture>
	</Button>

	<Button name="Epsilon_MerchantSoundPickerBindButtonTemplate" inherits="UIMenuButtonStretchTemplate" text="(Not Bound)" virtual="true">
		<Size x="150" y="18"/>
		<Layers>
			<Layer level="ARTWORK">
				<FontString parentKey="Label" inherits="GameFontNormalSmall" justifyH="right">
					<Anchors>
						<Anchor point="LEFT" relativeTo="Epsilon_MerchantSoundPicker" x="8" />
						<Anchor point="BOTTOM" y="4" />
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnShow>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp");
			</OnShow>
			<OnEnter>
				GameTooltip:SetOwner( self, "ANCHOR_RIGHT" )
				GameTooltip_SetTitle( GameTooltip, self.title )
				GameTooltip:AddLine( self.description, 1, 0.81, 0, true )
				GameTooltip:AddLine( "&lt;Left Click to Bind>|n&lt;Right Click to Unbind>", 0.7, 0.7, 0.7, true )
				GameTooltip:Show()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
			<OnClick>
				if button == "LeftButton" then
					Epsilon_MerchantSoundPicker_BindSound( self )
				elseif button == "RightButton" then
					Epsilon_MerchantSoundPicker_UnbindSound( self )
				end
			</OnClick>
		</Scripts>
	</Button>

    <Frame name="Epsilon_MerchantSoundPicker" parent="UIParent" hidden="true" inherits="ButtonFrameTemplate" frameStrata="DIALOG" toplevel="true" resizable="true">
		<Size x="350" y="380"/>
		<ResizeBounds>
			<minResize x="350" y="380"/>
			<maxResize x="1500" y="800"/>
		</ResizeBounds>
		<Anchors>
		  <Anchor point="LEFT" relativePoint="RIGHT"/>
		</Anchors>

		<Scripts>
		  <OnLoad>
			Epsilon_MerchantSoundPicker_OnLoad(self);
		  </OnLoad>
		  <OnSizeChanged function="Epsilon_MerchantSoundPicker_OnSizeChanged"/>
		</Scripts>
		<Frames>

		  <DropDownToggleButton parentKey="FilterButton" inherits="UIMenuButtonStretchTemplate" text="FILTER">
			<Size x="70" y="22"/>
			<Anchors>
			  <Anchor point="TOPRIGHT" x="-10" y="-26"/>
			</Anchors>
			<Layers>
			  <Layer level="ARTWORK">
				<Texture parentKey="Icon" file="Interface\ChatFrame\ChatFrameExpandArrow">
				  <Size x="10" y="12"/>
				  <Anchors>
					<Anchor point="RIGHT" relativeKey="$parent.Right" relativePoint="RIGHT" x="-5"/>
				  </Anchors>
				</Texture>
			  </Layer>
			</Layers>
			<Scripts>
			  <OnMouseDown>
				UIMenuButtonStretchMixin.OnMouseDown(self, button);
				ToggleDropDownMenu(1, nil, self:GetParent().FilterDropDown, self, 74, 15);
				PlaySound(SOUNDKIT.IG_MAINMENU_OPTION_CHECKBOX_ON);
			  </OnMouseDown>
			</Scripts>
		  </DropDownToggleButton>
		  <Frame name="Epsilon_MerchantSoundPickerFilterDropDown" parentKey="FilterDropDown" inherits="UIDropDownMenuTemplate">
			<Scripts>
			  <OnLoad>
				self.Text:SetJustifyH("CENTER");
				self.Button:Show();
			  </OnLoad>
			</Scripts>
		  </Frame>

		  <!-- Search/filter box. -->
		  <EditBox parentKey="search" inherits="SearchBoxTemplate">
			<Size x="170" y="8" />
			<Anchors>
			  <Anchor point="TOPLEFT" x="80" y="-26" />
			  <Anchor point="BOTTOMRIGHT" relativeKey="$parent.FilterButton" relativePoint="BOTTOMLEFT" x="0" y="0" />
			</Anchors>
			<Scripts>
			  <OnTextChanged function="Epsilon_MerchantSoundPickerSearch_OnTextChanged"/>
			  <OnEnterPressed function="Epsilon_MerchantSoundPickerSearch_OnEnterPressed"/>
			  <OnEscapePressed function="EditBox_ClearFocus"/>
			  <OnLoad>
			  	SearchBoxTemplate_OnLoad(self)
				self.clearButton:HookScript("OnClick", function(self)
					Epsilon_MerchantSoundPickerSearch_OnEnterPressed(self:GetParent())
				end)
			  </OnLoad>
			</Scripts>
		  </EditBox>

		  <Button parentKey="resizer">
			<Size x="16" y="16"/>
			<Anchors>
				<Anchor point="BOTTOMRIGHT" x="-3" y="3"/>
			</Anchors>
			<NormalTexture file="Interface/ChatFrame/UI-ChatIM-SizeGrabber-Down"/>
			<PushedTexture file="Interface/ChatFrame/UI-ChatIM-SizeGrabber-Up"/>
			<HighlightTexture file="Interface/ChatFrame/UI-ChatIM-SizeGrabber-Highlight"/>
			<Scripts>
				<OnMouseDown>
					self:GetParent():StartSizing("BOTTOMRIGHT");
					self:SetScript("OnUpdate", Epsilon_MerchantSoundPicker_UpdateSize);
				</OnMouseDown>
				<OnMouseUp>
					self:GetParent():StopMovingOrSizing("BOTTOMRIGHT");
					self:SetScript("OnUpdate", nil);
				</OnMouseUp>
			</Scripts>
		  </Button>

		  <Button name="Epsilon_MerchantSoundPickerGreetingSound" parentKey="greetingSound" inherits="Epsilon_MerchantSoundPickerBindButtonTemplate">
			<Anchors>
				<Anchor point="BOTTOMRIGHT" x="-8" y="74"/>
			</Anchors>
			 <KeyValues>
				<KeyValue key="soundType" value="greeting" type="string"/>
				<KeyValue key="title" value="Greeting" type="string"/>
				<KeyValue key="description" value="This sound plays when a player speaks with this NPC.|n|n|cFF00ADEFTip:|r|cFFFFFFFF Try using a 'VendorNPCGreetings' sound.|r" type="string"/>
			 </KeyValues>
			 <Scripts>
				<OnLoad>
					self.Label:SetText( "Greeting" )
				</OnLoad>
			</Scripts>
		  </Button>

		  <Button name="Epsilon_MerchantSoundPickerOnClickSound" parentKey="onclickSound" inherits="Epsilon_MerchantSoundPickerBindButtonTemplate">
			<Anchors>
				<Anchor point="TOP" relativeKey="$parent.greetingSound" y="-16"/>
			</Anchors>
			<KeyValues>
				<KeyValue key="soundType" value="onclick" type="string"/>
				<KeyValue key="title" value="On Click" type="string"/>
				<KeyValue key="description" value="This sound plays when a player targets this NPC.|n|n|cFF00ADEFTip:|r|cFFFFFFFF Try using an 'NPCGreetings' sound.|r" type="string"/>
			 </KeyValues>
			 <Scripts>
				<OnLoad>
					self.Label:SetText( "On Click" )
				</OnLoad>
			</Scripts>
		  </Button>

		  <Button name="Epsilon_MerchantSoundPickerBuyItemSound" parentKey="buyitemSound" inherits="Epsilon_MerchantSoundPickerBindButtonTemplate">
			<Anchors>
				<Anchor point="TOP" relativeKey="$parent.onclickSound" y="-16"/>
			</Anchors>
			<KeyValues>
				<KeyValue key="soundType" value="buyitem" type="string"/>
				<KeyValue key="title" value="Purchase" type="string"/>
				<KeyValue key="description" value="This sound plays when a player buys an item from this NPC.|n|n|cFF00ADEFTip:|r|cFFFFFFFF Try using a 'Thank You' sound.|r" type="string"/>
			 </KeyValues>
			 <Scripts>
				<OnLoad>
					self.Label:SetText( "Purchase" )
				</OnLoad>
			</Scripts>
		  </Button>

		  <Button name="Epsilon_MerchantSoundPickerFarewellSound" parentKey="farewellSound" inherits="Epsilon_MerchantSoundPickerBindButtonTemplate">
			<Anchors>
				<Anchor point="TOP" relativeKey="$parent.buyitemSound" y="-16"/>
			</Anchors>
			<KeyValues>
				<KeyValue key="soundType" value="farewell" type="string"/>
				<KeyValue key="title" value="Farewell" type="string"/>
				<KeyValue key="description" value="This sound plays when a player stop speaking with this NPC.|n|n|cFF00ADEFTip:|r|cFFFFFFFF Try using an 'NPCFarewells' sound.|r" type="string"/>
			 </KeyValues>
			 <Scripts>
				<OnLoad>
					self.Label:SetText( "Farewell" )
				</OnLoad>
			</Scripts>
		  </Button>

		  <!-- Area for icon selector. -->
		  <ScrollFrame name="$parentScrollFrame" inherits="FauxScrollFrameTemplate">
			<Anchors>
				<Anchor point="TOPRIGHT" relativeKey="$parent.Inset" relativePoint="TOPRIGHT" x="-26" y="-5"/>
				<Anchor point="BOTTOMRIGHT" relativeKey="$parent.Inset" relativePoint="BOTTOMRIGHT" x="0" y="0"/>
				<Anchor point="LEFT" relativeKey="$parent.Inset" relativePoint="LEFT"/>
			</Anchors>
			<Scripts>
				<OnVerticalScroll>
					FauxScrollFrame_OnVerticalScroll(self, offset, 16, Epsilon_MerchantSoundPicker_Update);
				</OnVerticalScroll>
			</Scripts>
			<Layers>
				<Layer level="BORDER">
					<Texture parentKey="ScrollBarTop" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
						<Size x="31" y="205"/>
						<Anchors>
							<Anchor point="TOPLEFT" relativePoint="TOPRIGHT" x="-2" y="5"/>
						</Anchors>
						<TexCoords left="0" right="0.484375" top="0" bottom="0.8"/>
					</Texture>
					<Texture parentKey="ScrollBarBottom" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
						<Size x="31" y="106"/>
						<Anchors>
							<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT" x="-2" y="-2"/>
						</Anchors>
						<TexCoords left="0.515625" right="1.0" top="0" bottom="0.4140625"/>
					</Texture>
					<Texture parentKey="ScrollBarMid" file="Interface\PaperDollInfoFrame\UI-Character-ScrollBar">
						<Size x="31"/>
						<Anchors>
							<Anchor point="TOPLEFT" relativeKey="$parent.ScrollBarTop" relativePoint="BOTTOMLEFT"/>
							<Anchor point="BOTTOMRIGHT" relativeKey="$parent.ScrollBarBottom" relativePoint="TOPRIGHT"/>
						</Anchors>
						<TexCoords left="0" right="0.49" top="0.4" bottom="0.8"/>
					</Texture>
				</Layer>
			</Layers>
		  </ScrollFrame>
		</Frames>
	</Frame>
</Ui>
